// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: deepest.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "deepest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace config {

namespace {

const ::google::protobuf::Descriptor* Model_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Model_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Model_ModelID_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Module_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Module_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Module_ModuleID_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Cluster_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Cluster_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_deepest_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_deepest_2eproto() {
  protobuf_AddDesc_deepest_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "deepest.proto");
  GOOGLE_CHECK(file != NULL);
  Model_descriptor_ = file->message_type(0);
  static const int Model_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Model, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Model, parameters_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Model, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Model, modelfile_),
  };
  Model_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Model_descriptor_,
      Model::default_instance_,
      Model_offsets_,
      -1,
      -1,
      -1,
      sizeof(Model),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Model, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Model, _is_default_instance_));
  Model_ModelID_descriptor_ = Model_descriptor_->enum_type(0);
  Module_descriptor_ = file->message_type(1);
  static const int Module_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, cores_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, freqmin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, freqmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, freqinc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, freqnom_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, models_),
  };
  Module_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Module_descriptor_,
      Module::default_instance_,
      Module_offsets_,
      -1,
      -1,
      -1,
      sizeof(Module),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, _is_default_instance_));
  Module_ModuleID_descriptor_ = Module_descriptor_->enum_type(0);
  Cluster_descriptor_ = file->message_type(2);
  static const int Cluster_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cluster, module_),
  };
  Cluster_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Cluster_descriptor_,
      Cluster::default_instance_,
      Cluster_offsets_,
      -1,
      -1,
      -1,
      sizeof(Cluster),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cluster, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cluster, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_deepest_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Model_descriptor_, &Model::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Module_descriptor_, &Module::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Cluster_descriptor_, &Cluster::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_deepest_2eproto() {
  delete Model::default_instance_;
  delete Model_reflection_;
  delete Module::default_instance_;
  delete Module_reflection_;
  delete Cluster::default_instance_;
  delete Cluster_reflection_;
}

void protobuf_AddDesc_deepest_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_deepest_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rdeepest.proto\022\006config\"\224\001\n\005Model\022#\n\004typ"
    "e\030\001 \001(\0162\025.config.Model.ModelID\022\022\n\nparame"
    "ters\030\002 \001(\005\022\023\n\013description\030\003 \001(\t\022\021\n\tmodel"
    "File\030\004 \001(\t\"*\n\007ModelID\022\n\n\006ENERGY\020\000\022\t\n\005POW"
    "ER\020\001\022\010\n\004TIME\020\002\"\350\001\n\006Module\022#\n\002id\030\001 \001(\0162\027."
    "config.Module.ModuleID\022\r\n\005cores\030\002 \001(\005\022\014\n"
    "\004name\030\003 \001(\t\022\023\n\013description\030\004 \001(\t\022\017\n\007freq"
    "Min\030\005 \001(\001\022\017\n\007freqMax\030\006 \001(\001\022\017\n\007freqInc\030\007 "
    "\001(\001\022\017\n\007freqNom\030\010 \001(\001\022\035\n\006models\030\t \003(\0132\r.c"
    "onfig.Model\"$\n\010ModuleID\022\006\n\002CM\020\000\022\007\n\003DAM\020\001"
    "\022\007\n\003ESB\020\002\")\n\007Cluster\022\036\n\006module\030\001 \003(\0132\016.c"
    "onfig.Moduleb\006proto3", 460);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "deepest.proto", &protobuf_RegisterTypes);
  Model::default_instance_ = new Model();
  Module::default_instance_ = new Module();
  Cluster::default_instance_ = new Cluster();
  Model::default_instance_->InitAsDefaultInstance();
  Module::default_instance_->InitAsDefaultInstance();
  Cluster::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_deepest_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_deepest_2eproto {
  StaticDescriptorInitializer_deepest_2eproto() {
    protobuf_AddDesc_deepest_2eproto();
  }
} static_descriptor_initializer_deepest_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* Model_ModelID_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Model_ModelID_descriptor_;
}
bool Model_ModelID_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Model_ModelID Model::ENERGY;
const Model_ModelID Model::POWER;
const Model_ModelID Model::TIME;
const Model_ModelID Model::ModelID_MIN;
const Model_ModelID Model::ModelID_MAX;
const int Model::ModelID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Model::kTypeFieldNumber;
const int Model::kParametersFieldNumber;
const int Model::kDescriptionFieldNumber;
const int Model::kModelFileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Model::Model()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:config.Model)
}

void Model::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Model::Model(const Model& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:config.Model)
}

void Model::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0;
  parameters_ = 0;
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modelfile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Model::~Model() {
  // @@protoc_insertion_point(destructor:config.Model)
  SharedDtor();
}

void Model::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modelfile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Model::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Model::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Model_descriptor_;
}

const Model& Model::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_deepest_2eproto();
  return *default_instance_;
}

Model* Model::default_instance_ = NULL;

Model* Model::New(::google::protobuf::Arena* arena) const {
  Model* n = new Model;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Model::Clear() {
// @@protoc_insertion_point(message_clear_start:config.Model)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Model, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Model*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(type_, parameters_);
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modelfile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool Model::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:config.Model)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .config.Model.ModelID type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::config::Model_ModelID >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_parameters;
        break;
      }

      // optional int32 parameters = 2;
      case 2: {
        if (tag == 16) {
         parse_parameters:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &parameters_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_description;
        break;
      }

      // optional string description = 3;
      case 3: {
        if (tag == 26) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "config.Model.description"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_modelFile;
        break;
      }

      // optional string modelFile = 4;
      case 4: {
        if (tag == 34) {
         parse_modelFile:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_modelfile()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->modelfile().data(), this->modelfile().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "config.Model.modelFile"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:config.Model)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:config.Model)
  return false;
#undef DO_
}

void Model::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:config.Model)
  // optional .config.Model.ModelID type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional int32 parameters = 2;
  if (this->parameters() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->parameters(), output);
  }

  // optional string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "config.Model.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // optional string modelFile = 4;
  if (this->modelfile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modelfile().data(), this->modelfile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "config.Model.modelFile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->modelfile(), output);
  }

  // @@protoc_insertion_point(serialize_end:config.Model)
}

::google::protobuf::uint8* Model::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:config.Model)
  // optional .config.Model.ModelID type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional int32 parameters = 2;
  if (this->parameters() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->parameters(), target);
  }

  // optional string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "config.Model.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // optional string modelFile = 4;
  if (this->modelfile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modelfile().data(), this->modelfile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "config.Model.modelFile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->modelfile(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:config.Model)
  return target;
}

int Model::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:config.Model)
  int total_size = 0;

  // optional .config.Model.ModelID type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional int32 parameters = 2;
  if (this->parameters() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->parameters());
  }

  // optional string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // optional string modelFile = 4;
  if (this->modelfile().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->modelfile());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Model::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:config.Model)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Model* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Model>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:config.Model)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:config.Model)
    MergeFrom(*source);
  }
}

void Model::MergeFrom(const Model& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:config.Model)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.parameters() != 0) {
    set_parameters(from.parameters());
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.modelfile().size() > 0) {

    modelfile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modelfile_);
  }
}

void Model::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:config.Model)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Model::CopyFrom(const Model& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:config.Model)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Model::IsInitialized() const {

  return true;
}

void Model::Swap(Model* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Model::InternalSwap(Model* other) {
  std::swap(type_, other->type_);
  std::swap(parameters_, other->parameters_);
  description_.Swap(&other->description_);
  modelfile_.Swap(&other->modelfile_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Model::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Model_descriptor_;
  metadata.reflection = Model_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Model

// optional .config.Model.ModelID type = 1;
void Model::clear_type() {
  type_ = 0;
}
 ::config::Model_ModelID Model::type() const {
  // @@protoc_insertion_point(field_get:config.Model.type)
  return static_cast< ::config::Model_ModelID >(type_);
}
 void Model::set_type(::config::Model_ModelID value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:config.Model.type)
}

// optional int32 parameters = 2;
void Model::clear_parameters() {
  parameters_ = 0;
}
 ::google::protobuf::int32 Model::parameters() const {
  // @@protoc_insertion_point(field_get:config.Model.parameters)
  return parameters_;
}
 void Model::set_parameters(::google::protobuf::int32 value) {
  
  parameters_ = value;
  // @@protoc_insertion_point(field_set:config.Model.parameters)
}

// optional string description = 3;
void Model::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Model::description() const {
  // @@protoc_insertion_point(field_get:config.Model.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Model::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:config.Model.description)
}
 void Model::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:config.Model.description)
}
 void Model::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:config.Model.description)
}
 ::std::string* Model::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:config.Model.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Model::release_description() {
  // @@protoc_insertion_point(field_release:config.Model.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Model::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:config.Model.description)
}

// optional string modelFile = 4;
void Model::clear_modelfile() {
  modelfile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Model::modelfile() const {
  // @@protoc_insertion_point(field_get:config.Model.modelFile)
  return modelfile_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Model::set_modelfile(const ::std::string& value) {
  
  modelfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:config.Model.modelFile)
}
 void Model::set_modelfile(const char* value) {
  
  modelfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:config.Model.modelFile)
}
 void Model::set_modelfile(const char* value, size_t size) {
  
  modelfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:config.Model.modelFile)
}
 ::std::string* Model::mutable_modelfile() {
  
  // @@protoc_insertion_point(field_mutable:config.Model.modelFile)
  return modelfile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Model::release_modelfile() {
  // @@protoc_insertion_point(field_release:config.Model.modelFile)
  
  return modelfile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Model::set_allocated_modelfile(::std::string* modelfile) {
  if (modelfile != NULL) {
    
  } else {
    
  }
  modelfile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), modelfile);
  // @@protoc_insertion_point(field_set_allocated:config.Model.modelFile)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* Module_ModuleID_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Module_ModuleID_descriptor_;
}
bool Module_ModuleID_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Module_ModuleID Module::CM;
const Module_ModuleID Module::DAM;
const Module_ModuleID Module::ESB;
const Module_ModuleID Module::ModuleID_MIN;
const Module_ModuleID Module::ModuleID_MAX;
const int Module::ModuleID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Module::kIdFieldNumber;
const int Module::kCoresFieldNumber;
const int Module::kNameFieldNumber;
const int Module::kDescriptionFieldNumber;
const int Module::kFreqMinFieldNumber;
const int Module::kFreqMaxFieldNumber;
const int Module::kFreqIncFieldNumber;
const int Module::kFreqNomFieldNumber;
const int Module::kModelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Module::Module()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:config.Module)
}

void Module::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Module::Module(const Module& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:config.Module)
}

void Module::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  cores_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  freqmin_ = 0;
  freqmax_ = 0;
  freqinc_ = 0;
  freqnom_ = 0;
}

Module::~Module() {
  // @@protoc_insertion_point(destructor:config.Module)
  SharedDtor();
}

void Module::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Module::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Module::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Module_descriptor_;
}

const Module& Module::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_deepest_2eproto();
  return *default_instance_;
}

Module* Module::default_instance_ = NULL;

Module* Module::New(::google::protobuf::Arena* arena) const {
  Module* n = new Module;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Module::Clear() {
// @@protoc_insertion_point(message_clear_start:config.Module)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Module, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Module*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, cores_);
  ZR_(freqmin_, freqnom_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  models_.Clear();
}

bool Module::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:config.Module)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .config.Module.ModuleID id = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::config::Module_ModuleID >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_cores;
        break;
      }

      // optional int32 cores = 2;
      case 2: {
        if (tag == 16) {
         parse_cores:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cores_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "config.Module.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_description;
        break;
      }

      // optional string description = 4;
      case 4: {
        if (tag == 34) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "config.Module.description"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_freqMin;
        break;
      }

      // optional double freqMin = 5;
      case 5: {
        if (tag == 41) {
         parse_freqMin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &freqmin_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_freqMax;
        break;
      }

      // optional double freqMax = 6;
      case 6: {
        if (tag == 49) {
         parse_freqMax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &freqmax_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_freqInc;
        break;
      }

      // optional double freqInc = 7;
      case 7: {
        if (tag == 57) {
         parse_freqInc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &freqinc_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_freqNom;
        break;
      }

      // optional double freqNom = 8;
      case 8: {
        if (tag == 65) {
         parse_freqNom:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &freqnom_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_models;
        break;
      }

      // repeated .config.Model models = 9;
      case 9: {
        if (tag == 74) {
         parse_models:
          DO_(input->IncrementRecursionDepth());
         parse_loop_models:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_models()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_loop_models;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:config.Module)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:config.Module)
  return false;
#undef DO_
}

void Module::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:config.Module)
  // optional .config.Module.ModuleID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // optional int32 cores = 2;
  if (this->cores() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cores(), output);
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "config.Module.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional string description = 4;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "config.Module.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->description(), output);
  }

  // optional double freqMin = 5;
  if (this->freqmin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->freqmin(), output);
  }

  // optional double freqMax = 6;
  if (this->freqmax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->freqmax(), output);
  }

  // optional double freqInc = 7;
  if (this->freqinc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->freqinc(), output);
  }

  // optional double freqNom = 8;
  if (this->freqnom() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->freqnom(), output);
  }

  // repeated .config.Model models = 9;
  for (unsigned int i = 0, n = this->models_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->models(i), output);
  }

  // @@protoc_insertion_point(serialize_end:config.Module)
}

::google::protobuf::uint8* Module::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:config.Module)
  // optional .config.Module.ModuleID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // optional int32 cores = 2;
  if (this->cores() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cores(), target);
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "config.Module.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional string description = 4;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "config.Module.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->description(), target);
  }

  // optional double freqMin = 5;
  if (this->freqmin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->freqmin(), target);
  }

  // optional double freqMax = 6;
  if (this->freqmax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->freqmax(), target);
  }

  // optional double freqInc = 7;
  if (this->freqinc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->freqinc(), target);
  }

  // optional double freqNom = 8;
  if (this->freqnom() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->freqnom(), target);
  }

  // repeated .config.Model models = 9;
  for (unsigned int i = 0, n = this->models_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->models(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:config.Module)
  return target;
}

int Module::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:config.Module)
  int total_size = 0;

  // optional .config.Module.ModuleID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  // optional int32 cores = 2;
  if (this->cores() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cores());
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string description = 4;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // optional double freqMin = 5;
  if (this->freqmin() != 0) {
    total_size += 1 + 8;
  }

  // optional double freqMax = 6;
  if (this->freqmax() != 0) {
    total_size += 1 + 8;
  }

  // optional double freqInc = 7;
  if (this->freqinc() != 0) {
    total_size += 1 + 8;
  }

  // optional double freqNom = 8;
  if (this->freqnom() != 0) {
    total_size += 1 + 8;
  }

  // repeated .config.Model models = 9;
  total_size += 1 * this->models_size();
  for (int i = 0; i < this->models_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->models(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Module::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:config.Module)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Module* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Module>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:config.Module)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:config.Module)
    MergeFrom(*source);
  }
}

void Module::MergeFrom(const Module& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:config.Module)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  models_.MergeFrom(from.models_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.cores() != 0) {
    set_cores(from.cores());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.freqmin() != 0) {
    set_freqmin(from.freqmin());
  }
  if (from.freqmax() != 0) {
    set_freqmax(from.freqmax());
  }
  if (from.freqinc() != 0) {
    set_freqinc(from.freqinc());
  }
  if (from.freqnom() != 0) {
    set_freqnom(from.freqnom());
  }
}

void Module::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:config.Module)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Module::CopyFrom(const Module& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:config.Module)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Module::IsInitialized() const {

  return true;
}

void Module::Swap(Module* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Module::InternalSwap(Module* other) {
  std::swap(id_, other->id_);
  std::swap(cores_, other->cores_);
  name_.Swap(&other->name_);
  description_.Swap(&other->description_);
  std::swap(freqmin_, other->freqmin_);
  std::swap(freqmax_, other->freqmax_);
  std::swap(freqinc_, other->freqinc_);
  std::swap(freqnom_, other->freqnom_);
  models_.UnsafeArenaSwap(&other->models_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Module::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Module_descriptor_;
  metadata.reflection = Module_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Module

// optional .config.Module.ModuleID id = 1;
void Module::clear_id() {
  id_ = 0;
}
 ::config::Module_ModuleID Module::id() const {
  // @@protoc_insertion_point(field_get:config.Module.id)
  return static_cast< ::config::Module_ModuleID >(id_);
}
 void Module::set_id(::config::Module_ModuleID value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:config.Module.id)
}

// optional int32 cores = 2;
void Module::clear_cores() {
  cores_ = 0;
}
 ::google::protobuf::int32 Module::cores() const {
  // @@protoc_insertion_point(field_get:config.Module.cores)
  return cores_;
}
 void Module::set_cores(::google::protobuf::int32 value) {
  
  cores_ = value;
  // @@protoc_insertion_point(field_set:config.Module.cores)
}

// optional string name = 3;
void Module::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Module::name() const {
  // @@protoc_insertion_point(field_get:config.Module.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Module::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:config.Module.name)
}
 void Module::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:config.Module.name)
}
 void Module::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:config.Module.name)
}
 ::std::string* Module::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:config.Module.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Module::release_name() {
  // @@protoc_insertion_point(field_release:config.Module.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Module::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:config.Module.name)
}

// optional string description = 4;
void Module::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Module::description() const {
  // @@protoc_insertion_point(field_get:config.Module.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Module::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:config.Module.description)
}
 void Module::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:config.Module.description)
}
 void Module::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:config.Module.description)
}
 ::std::string* Module::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:config.Module.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Module::release_description() {
  // @@protoc_insertion_point(field_release:config.Module.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Module::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:config.Module.description)
}

// optional double freqMin = 5;
void Module::clear_freqmin() {
  freqmin_ = 0;
}
 double Module::freqmin() const {
  // @@protoc_insertion_point(field_get:config.Module.freqMin)
  return freqmin_;
}
 void Module::set_freqmin(double value) {
  
  freqmin_ = value;
  // @@protoc_insertion_point(field_set:config.Module.freqMin)
}

// optional double freqMax = 6;
void Module::clear_freqmax() {
  freqmax_ = 0;
}
 double Module::freqmax() const {
  // @@protoc_insertion_point(field_get:config.Module.freqMax)
  return freqmax_;
}
 void Module::set_freqmax(double value) {
  
  freqmax_ = value;
  // @@protoc_insertion_point(field_set:config.Module.freqMax)
}

// optional double freqInc = 7;
void Module::clear_freqinc() {
  freqinc_ = 0;
}
 double Module::freqinc() const {
  // @@protoc_insertion_point(field_get:config.Module.freqInc)
  return freqinc_;
}
 void Module::set_freqinc(double value) {
  
  freqinc_ = value;
  // @@protoc_insertion_point(field_set:config.Module.freqInc)
}

// optional double freqNom = 8;
void Module::clear_freqnom() {
  freqnom_ = 0;
}
 double Module::freqnom() const {
  // @@protoc_insertion_point(field_get:config.Module.freqNom)
  return freqnom_;
}
 void Module::set_freqnom(double value) {
  
  freqnom_ = value;
  // @@protoc_insertion_point(field_set:config.Module.freqNom)
}

// repeated .config.Model models = 9;
int Module::models_size() const {
  return models_.size();
}
void Module::clear_models() {
  models_.Clear();
}
const ::config::Model& Module::models(int index) const {
  // @@protoc_insertion_point(field_get:config.Module.models)
  return models_.Get(index);
}
::config::Model* Module::mutable_models(int index) {
  // @@protoc_insertion_point(field_mutable:config.Module.models)
  return models_.Mutable(index);
}
::config::Model* Module::add_models() {
  // @@protoc_insertion_point(field_add:config.Module.models)
  return models_.Add();
}
::google::protobuf::RepeatedPtrField< ::config::Model >*
Module::mutable_models() {
  // @@protoc_insertion_point(field_mutable_list:config.Module.models)
  return &models_;
}
const ::google::protobuf::RepeatedPtrField< ::config::Model >&
Module::models() const {
  // @@protoc_insertion_point(field_list:config.Module.models)
  return models_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Cluster::kModuleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Cluster::Cluster()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:config.Cluster)
}

void Cluster::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Cluster::Cluster(const Cluster& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:config.Cluster)
}

void Cluster::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Cluster::~Cluster() {
  // @@protoc_insertion_point(destructor:config.Cluster)
  SharedDtor();
}

void Cluster::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Cluster::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Cluster::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Cluster_descriptor_;
}

const Cluster& Cluster::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_deepest_2eproto();
  return *default_instance_;
}

Cluster* Cluster::default_instance_ = NULL;

Cluster* Cluster::New(::google::protobuf::Arena* arena) const {
  Cluster* n = new Cluster;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Cluster::Clear() {
// @@protoc_insertion_point(message_clear_start:config.Cluster)
  module_.Clear();
}

bool Cluster::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:config.Cluster)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .config.Module module = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_module:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_module()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_module;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:config.Cluster)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:config.Cluster)
  return false;
#undef DO_
}

void Cluster::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:config.Cluster)
  // repeated .config.Module module = 1;
  for (unsigned int i = 0, n = this->module_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->module(i), output);
  }

  // @@protoc_insertion_point(serialize_end:config.Cluster)
}

::google::protobuf::uint8* Cluster::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:config.Cluster)
  // repeated .config.Module module = 1;
  for (unsigned int i = 0, n = this->module_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->module(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:config.Cluster)
  return target;
}

int Cluster::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:config.Cluster)
  int total_size = 0;

  // repeated .config.Module module = 1;
  total_size += 1 * this->module_size();
  for (int i = 0; i < this->module_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->module(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Cluster::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:config.Cluster)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Cluster* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Cluster>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:config.Cluster)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:config.Cluster)
    MergeFrom(*source);
  }
}

void Cluster::MergeFrom(const Cluster& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:config.Cluster)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  module_.MergeFrom(from.module_);
}

void Cluster::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:config.Cluster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cluster::CopyFrom(const Cluster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:config.Cluster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cluster::IsInitialized() const {

  return true;
}

void Cluster::Swap(Cluster* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Cluster::InternalSwap(Cluster* other) {
  module_.UnsafeArenaSwap(&other->module_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Cluster::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Cluster_descriptor_;
  metadata.reflection = Cluster_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Cluster

// repeated .config.Module module = 1;
int Cluster::module_size() const {
  return module_.size();
}
void Cluster::clear_module() {
  module_.Clear();
}
const ::config::Module& Cluster::module(int index) const {
  // @@protoc_insertion_point(field_get:config.Cluster.module)
  return module_.Get(index);
}
::config::Module* Cluster::mutable_module(int index) {
  // @@protoc_insertion_point(field_mutable:config.Cluster.module)
  return module_.Mutable(index);
}
::config::Module* Cluster::add_module() {
  // @@protoc_insertion_point(field_add:config.Cluster.module)
  return module_.Add();
}
::google::protobuf::RepeatedPtrField< ::config::Module >*
Cluster::mutable_module() {
  // @@protoc_insertion_point(field_mutable_list:config.Cluster.module)
  return &module_;
}
const ::google::protobuf::RepeatedPtrField< ::config::Module >&
Cluster::module() const {
  // @@protoc_insertion_point(field_list:config.Cluster.module)
  return module_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace config

// @@protoc_insertion_point(global_scope)
